//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


    using System;
    using System.Text;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    using System.Linq;
    
    
    public class clsdirectorsVideos {
        
        public static void Update(DirectorsVideos directorsVideos) {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;           

            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from DirectorsVideos where  VideoID = " + directorsVideos.VideoID + "", conn);      

            conn.Open();
            System.Data.DataTable tbDirectorsVideos;
            tbDirectorsVideos = new System.Data.DataTable("DirectorsVideos");
            adapt.Fill(tbDirectorsVideos);
            SqlCommandBuilder mybuild;
            mybuild = new System.Data.SqlClient.SqlCommandBuilder(adapt);
            adapt.UpdateCommand = mybuild.GetUpdateCommand();
            
      
                // Edit methods
                System.Data.DataRow rowDirectorsVideos;
                rowDirectorsVideos = tbDirectorsVideos.Rows[0];
                rowDirectorsVideos["VideoID"] = directorsVideos.VideoID;
                rowDirectorsVideos["VideoTitle"] = directorsVideos.VideoTitle;
                rowDirectorsVideos["VideoFile"] = directorsVideos.VideoFile;
                rowDirectorsVideos["VideoPath"] = directorsVideos.VideoPath;
                rowDirectorsVideos["CreatedBy"] = directorsVideos.CreatedBy;
                rowDirectorsVideos["CreatedDate"] = directorsVideos.CreatedDate;
                rowDirectorsVideos["ModifiedBy"] = directorsVideos.ModifiedBy;
                rowDirectorsVideos["ModifiedDate"] = directorsVideos.ModifiedDate;
                rowDirectorsVideos["BoardID"] = directorsVideos.BoardID;
                adapt.Update(tbDirectorsVideos);
          
        }
        public static void Insert(DirectorsVideos directorsVideos)
        {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from DirectorsVideos", conn);
            conn.Open();
            System.Data.DataTable tbDirectorsVideos;
            tbDirectorsVideos = new System.Data.DataTable("DirectorsVideos");
            adapt.Fill(tbDirectorsVideos);
            SqlCommandBuilder mybuild;
            mybuild = new System.Data.SqlClient.SqlCommandBuilder(adapt);            
            adapt.InsertCommand = mybuild.GetInsertCommand();
           
                System.Data.DataRow rowDirectorsVideos;
                rowDirectorsVideos = tbDirectorsVideos.NewRow();               
                rowDirectorsVideos["VideoTitle"] = directorsVideos.VideoTitle;
                rowDirectorsVideos["VideoFile"] = directorsVideos.VideoFile;
                rowDirectorsVideos["VideoPath"] = directorsVideos.VideoPath;
                rowDirectorsVideos["CreatedBy"] = directorsVideos.CreatedBy;
                rowDirectorsVideos["CreatedDate"] = directorsVideos.CreatedDate;
                rowDirectorsVideos["ModifiedBy"] = directorsVideos.ModifiedBy;
                rowDirectorsVideos["ModifiedDate"] = directorsVideos.ModifiedDate;
                rowDirectorsVideos["BoardID"] = directorsVideos.BoardID;
                rowDirectorsVideos["Rank"] = directorsVideos.Rank;
                tbDirectorsVideos.Rows.Add(rowDirectorsVideos);
                adapt.Update(tbDirectorsVideos);
      
        }

        public static DirectorsVideos getDirectorsVideos(Int32 VideoID)
        {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
    
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from DirectorsVideos where  VideoID = " + VideoID + "", conn);
            conn.Open();
            System.Data.DataTable tbDirectorsVideos;
            tbDirectorsVideos = new System.Data.DataTable("DirectorsVideos");
            adapt.Fill(tbDirectorsVideos);
            DirectorsVideos DirectorsVideos;
            DirectorsVideos = new DirectorsVideos();
            if (tbDirectorsVideos.Rows.Count > 0) {
                System.Data.DataRow rowDirectorsVideos;
                rowDirectorsVideos = tbDirectorsVideos.Rows[0];
                DirectorsVideos.VideoID = System.Convert.ToInt32(rowDirectorsVideos["VideoID"]);
                DirectorsVideos.VideoTitle = System.Convert.ToString(rowDirectorsVideos["VideoTitle"]);
                DirectorsVideos.VideoFile = System.Convert.ToString(rowDirectorsVideos["VideoFile"]);
                DirectorsVideos.VideoPath = System.Convert.ToString(rowDirectorsVideos["VideoPath"]);
                DirectorsVideos.CreatedBy = System.Convert.ToString(rowDirectorsVideos["CreatedBy"]);
                DirectorsVideos.CreatedDate = System.Convert.ToDateTime(rowDirectorsVideos["CreatedDate"]);
                DirectorsVideos.ModifiedBy = System.Convert.ToString(rowDirectorsVideos["ModifiedBy"]);
                DirectorsVideos.ModifiedDate = System.Convert.ToDateTime(rowDirectorsVideos["ModifiedDate"]);
                DirectorsVideos.BoardID = System.Convert.ToInt32(rowDirectorsVideos["BoardID"]);
                DirectorsVideos.Rank = System.Convert.ToInt32(rowDirectorsVideos["Rank"]);
                return DirectorsVideos;
            }
            else {
                return null;
            }
        }
    }

