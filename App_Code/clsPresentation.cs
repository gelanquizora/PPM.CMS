//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//namespace terrible1 {
    using System;
    using System.Text;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    using System.Linq;
    
    
    public class clspresentation {

        public static void Insert(Presentation presentation)
        {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from Presentation", conn);
            conn.Open();
            System.Data.DataTable tbPresentation;
            tbPresentation = new System.Data.DataTable("Presentation");
            adapt.Fill(tbPresentation);
            SqlCommandBuilder mybuild;
            mybuild = new System.Data.SqlClient.SqlCommandBuilder(adapt);
            adapt.UpdateCommand = mybuild.GetUpdateCommand();
            adapt.InsertCommand = mybuild.GetInsertCommand();
            //if (tbPresentation.Rows.Count > 0)
            //{
            //    // Edit methods
            //    System.Data.DataRow rowPresentation;
            //    rowPresentation = tbPresentation.Rows[0];
            //    rowPresentation["Title"] = presentation.Title;
            //    rowPresentation["Description"] = presentation.Description;
            //    rowPresentation["ProjectID"] = presentation.ProjectID;
            //    adapt.Update(tbPresentation);
            //}
            //else
            //{
                System.Data.DataRow rowPresentation;
                rowPresentation = tbPresentation.NewRow();
                //rowPresentation["PresentationID"] = presentation.PresentationID;
                rowPresentation["Title"] = presentation.Title;
                rowPresentation["Description"] = presentation.Description;
                rowPresentation["ClientID"] = presentation.ClientID;
                tbPresentation.Rows.Add(rowPresentation);
                adapt.Update(tbPresentation);
            //}
        }
        public static void Update(Presentation presentation) {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from Presentation where  PresentationID = " + presentation.PresentationID + "", conn);
            conn.Open();
            System.Data.DataTable tbPresentation;
            tbPresentation = new System.Data.DataTable("Presentation");
            adapt.Fill(tbPresentation);
            SqlCommandBuilder mybuild;
            mybuild = new System.Data.SqlClient.SqlCommandBuilder(adapt);
            adapt.UpdateCommand = mybuild.GetUpdateCommand();
            adapt.InsertCommand = mybuild.GetInsertCommand();
            if (tbPresentation.Rows.Count > 0) {
                // Edit methods
                System.Data.DataRow rowPresentation;
                rowPresentation = tbPresentation.Rows[0];
                rowPresentation["Title"] = presentation.Title;
                rowPresentation["Description"] = presentation.Description;
                rowPresentation["ClientID"] = presentation.ClientID;
                adapt.Update(tbPresentation);
            }
            else {
                System.Data.DataRow rowPresentation;
                rowPresentation = tbPresentation.NewRow();
                rowPresentation["PresentationID"] = presentation.PresentationID;
                rowPresentation["Title"] = presentation.Title;
                rowPresentation["Description"] = presentation.Description;
                rowPresentation["ClientID"] = presentation.ClientID;
                tbPresentation.Rows.Add(rowPresentation);
                adapt.Update(tbPresentation);
            }
        }
        
        public static Presentation getPresentation(Int32 PresentationID) {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from Presentation where  PresentationID = " + PresentationID + "", conn);
            conn.Open();
            System.Data.DataTable tbPresentation;
            tbPresentation = new System.Data.DataTable("Presentation");
            adapt.Fill(tbPresentation);
            Presentation Presentation;
            Presentation = new Presentation();
            if (tbPresentation.Rows.Count > 0) {
                System.Data.DataRow rowPresentation;
                rowPresentation = tbPresentation.Rows[0];
                Presentation.Title = System.Convert.ToString(rowPresentation["Title"]);
                Presentation.Description = System.Convert.ToString(rowPresentation["Description"]);
                Presentation.ClientID = System.Convert.ToInt32(rowPresentation["ClientID"]);
                return Presentation;
            }
            else {
                return null;
            }
        }
    }
//}
