//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


    using System;
    using System.Text;
    using System.Data;
    using System.Data.SqlClient;
    using System.Configuration;
    using System.Linq;
    
    
    public class clsmodeTone {
        
        public static void Update(ModeTone modeTone) {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from ModeTone where 1=1", conn);
            conn.Open();
            System.Data.DataTable tbModeTone;
            tbModeTone = new System.Data.DataTable("ModeTone");
            adapt.Fill(tbModeTone);
            SqlCommandBuilder mybuild;
            mybuild = new System.Data.SqlClient.SqlCommandBuilder(adapt);
            adapt.UpdateCommand = mybuild.GetUpdateCommand();
            adapt.InsertCommand = mybuild.GetInsertCommand();
            if (tbModeTone.Rows.Count > 0) {
                // Edit methods
                System.Data.DataRow rowModeTone;
                rowModeTone = tbModeTone.Rows[0];
                rowModeTone["ModeToneID"] = modeTone.ModeToneID;
                rowModeTone["ModeToneTitle"] = modeTone.ModeToneTitle;
                rowModeTone["ModeTonePage"] = modeTone.ModeTonePage;
                rowModeTone["ModeToneFileName"] = modeTone.ModeToneFileName;
                rowModeTone["CreatedBy"] = modeTone.CreatedBy;
                rowModeTone["CreatedDate"] = modeTone.CreatedDate;
                rowModeTone["ModifiedBy"] = modeTone.ModifiedBy;
                rowModeTone["ModifiedDate"] = modeTone.ModifiedDate;
                rowModeTone["PresentationID"] = modeTone.PresentationID;
                adapt.Update(tbModeTone);
            }
            else {
                System.Data.DataRow rowModeTone;
                rowModeTone = tbModeTone.NewRow();
                rowModeTone["ModeToneID"] = modeTone.ModeToneID;
                rowModeTone["ModeToneTitle"] = modeTone.ModeToneTitle;
                rowModeTone["ModeTonePage"] = modeTone.ModeTonePage;
                rowModeTone["ModeToneFileName"] = modeTone.ModeToneFileName;
                rowModeTone["CreatedBy"] = modeTone.CreatedBy;
                rowModeTone["CreatedDate"] = modeTone.CreatedDate;
                rowModeTone["ModifiedBy"] = modeTone.ModifiedBy;
                rowModeTone["ModifiedDate"] = modeTone.ModifiedDate;
                rowModeTone["PresentationID"] = modeTone.PresentationID;
                tbModeTone.Rows.Add(rowModeTone);
                adapt.Update(tbModeTone);
            }
        }

        public static ModeTone getModeTone(Int32 ModeToneID)
        {
            SqlConnection conn;
            conn = new System.Data.SqlClient.SqlConnection(ConfigurationManager.ConnectionStrings["terrible1ConnectionString"].ConnectionString);
            SqlDataAdapter adapt;          
            adapt = new System.Data.SqlClient.SqlDataAdapter("select * from ModeTone where  ModeToneID = " + ModeToneID + "", conn);
            conn.Open();
            System.Data.DataTable tbModeTone;
            tbModeTone = new System.Data.DataTable("ModeTone");
            adapt.Fill(tbModeTone);
            ModeTone ModeTone;
            ModeTone = new ModeTone();
            if (tbModeTone.Rows.Count > 0) {
                System.Data.DataRow rowModeTone;
                rowModeTone = tbModeTone.Rows[0];
                ModeTone.ModeToneID = System.Convert.ToInt32(rowModeTone["ModeToneID"]);
                ModeTone.ModeToneTitle = System.Convert.ToString(rowModeTone["ModeToneTitle"]);
                ModeTone.ModeTonePage = System.Convert.ToString(rowModeTone["ModeTonePage"]);
                ModeTone.ModeToneFileName = System.Convert.ToString(rowModeTone["ModeToneFileName"]);
                ModeTone.CreatedBy = System.Convert.ToString(rowModeTone["CreatedBy"]);
                ModeTone.CreatedDate = System.Convert.ToDateTime(rowModeTone["CreatedDate"]);
                ModeTone.ModifiedBy = System.Convert.ToString(rowModeTone["ModifiedBy"]);
                ModeTone.ModifiedDate = System.Convert.ToDateTime(rowModeTone["ModifiedDate"]);
                ModeTone.PresentationID = System.Convert.ToInt32(rowModeTone["PresentationID"]);
                return ModeTone;
            }
            else {
                return null;
            }
        }
    }

